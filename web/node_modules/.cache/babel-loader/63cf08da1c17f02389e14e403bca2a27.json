{"ast":null,"code":"import _slicedToArray from \"C:\\\\Users\\\\multicampus\\\\git\\\\s02p12c103\\\\web\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\multicampus\\\\git\\\\s02p12c103\\\\web\\\\src\\\\pages\\\\test\\\\test1_db.jsx\";\nimport React, { useState } from \"react\";\nimport Layout from \"../../layout/Layout\";\nimport burger from \"../../img/burger.jpg\";\nimport chicken from \"../../img/chicken.jpg\";\nimport coke from \"../../img/coke.jpg\";\nimport set from \"../../img/set.jpg\";\nimport Table from \"@material-ui/core/Table\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport TableCell from \"@material-ui/core/TableCell\";\nconst defaultData = [{\n  key: \"4\",\n  src: set,\n  name: \"세트묵자\",\n  price: \"20000\",\n  qty: 0\n}, {\n  key: \"1\",\n  src: burger,\n  name: \"햄버거임\",\n  price: \"6000\",\n  qty: 0\n}, {\n  key: \"2\",\n  src: chicken,\n  name: \"치킨임\",\n  price: \"17000\",\n  qty: 0\n}, {\n  key: \"3\",\n  src: coke,\n  name: \"콜라임\",\n  price: \"2500\",\n  qty: 0\n}];\n\nconst TestPageForDB = props => {\n  var _useState = useState([]),\n      _useState2 = _slicedToArray(_useState, 2),\n      lists = _useState2[0],\n      setLists = _useState2[1];\n\n  const index = 0;\n\n  const addProduct = p => {\n    lists = lists.concat(p);\n    setLists(lists);\n    console.log(lists);\n  };\n\n  return React.createElement(Layout, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31\n    },\n    __self: this\n  }, \"DB Test page\", React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33\n    },\n    __self: this\n  }), \"\\uB4F1\\uB85D\\uD398\\uC774\\uC9C0...\", React.createElement(Table, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36\n    },\n    __self: this\n  }, React.createElement(TableHead, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37\n    },\n    __self: this\n  }, \"rr\"), React.createElement(TableBody, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38\n    },\n    __self: this\n  }, defaultData.map(p => {\n    return React.createElement(TableCell, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41\n      },\n      __self: this\n    }, React.createElement(TableRow, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42\n      },\n      __self: this\n    }, React.createElement(\"img\", {\n      src: p.src,\n      alt: \"menu\",\n      style: {\n        width: 500\n      },\n      onClick: () => addProduct(p),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43\n      },\n      __self: this\n    })), React.createElement(TableRow, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51\n      },\n      __self: this\n    }, p.name)));\n  }))), React.createElement(\"div\", {\n    style: {},\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58\n    },\n    __self: this\n  }, React.createElement(Table, {\n    style: {\n      width: \"400px\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59\n    },\n    __self: this\n  }, React.createElement(TableHead, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60\n    },\n    __self: this\n  }, React.createElement(TableRow, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61\n    },\n    __self: this\n  }, React.createElement(TableCell, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62\n    },\n    __self: this\n  }, \"\\uC774\\uB984\"), React.createElement(TableCell, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63\n    },\n    __self: this\n  }, \"\\uAC00\\uACA9\"), React.createElement(TableCell, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64\n    },\n    __self: this\n  }, \"\\uC218\\uB7C9\"))), React.createElement(TableBody, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67\n    },\n    __self: this\n  }, lists.map(({\n    key,\n    name,\n    price,\n    qty\n  }) => {\n    return React.createElement(TableRow, {\n      key: key,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71\n      },\n      __self: this\n    }, React.createElement(TableCell, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72\n      },\n      __self: this\n    }, name), React.createElement(TableCell, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73\n      },\n      __self: this\n    }, price), React.createElement(TableCell, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74\n      },\n      __self: this\n    }, qty));\n  }))))));\n};\n\nexport default TestPageForDB;","map":{"version":3,"sources":["C:/Users/multicampus/git/s02p12c103/web/src/pages/test/test1_db.jsx"],"names":["React","useState","Layout","burger","chicken","coke","set","Table","TableHead","TableBody","TableRow","TableCell","defaultData","key","src","name","price","qty","TestPageForDB","props","lists","setLists","index","addProduct","p","concat","console","log","map","width"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\r\nimport Layout from \"../../layout/Layout\";\r\nimport burger from \"../../img/burger.jpg\";\r\nimport chicken from \"../../img/chicken.jpg\";\r\nimport coke from \"../../img/coke.jpg\";\r\nimport set from \"../../img/set.jpg\";\r\nimport Table from \"@material-ui/core/Table\";\r\nimport TableHead from \"@material-ui/core/TableHead\";\r\nimport TableBody from \"@material-ui/core/TableBody\";\r\nimport TableRow from \"@material-ui/core/TableRow\";\r\nimport TableCell from \"@material-ui/core/TableCell\";\r\n\r\nconst defaultData = [\r\n  { key: \"4\", src: set, name: \"세트묵자\", price: \"20000\", qty: 0 },\r\n  { key: \"1\", src: burger, name: \"햄버거임\", price: \"6000\", qty: 0 },\r\n  { key: \"2\", src: chicken, name: \"치킨임\", price: \"17000\", qty: 0 },\r\n  { key: \"3\", src: coke, name: \"콜라임\", price: \"2500\", qty: 0 }\r\n];\r\nconst TestPageForDB = props => {\r\n  var [lists, setLists] = useState([]);\r\n  const index = 0;\r\n\r\n  const addProduct = p => {\r\n    lists = lists.concat(p);\r\n    setLists(lists);\r\n    console.log(lists);\r\n  };\r\n\r\n  return (\r\n    <Layout>\r\n      <div>\r\n        DB Test page\r\n        <br></br>\r\n        등록페이지...\r\n        {/* 메뉴들에 대한 정보 defaultData 배열 이미지와 함께 보여주기 */}\r\n        <Table>\r\n          <TableHead>rr</TableHead>\r\n          <TableBody>\r\n            {defaultData.map(p => {\r\n              return (\r\n                <TableCell>\r\n                  <TableRow>\r\n                    <img\r\n                      src={p.src}\r\n                      alt=\"menu\"\r\n                      style={{ width: 500 }}\r\n                      onClick={() => addProduct(p)}\r\n                    />\r\n                  </TableRow>\r\n                  <TableRow>\r\n                    <div>{p.name}</div>\r\n                  </TableRow>\r\n                </TableCell>\r\n              );\r\n            })}\r\n          </TableBody>\r\n        </Table>\r\n        <div style={{}}>\r\n          <Table style={{ width: \"400px\" }}>\r\n            <TableHead>\r\n              <TableRow>\r\n                <TableCell>이름</TableCell>\r\n                <TableCell>가격</TableCell>\r\n                <TableCell>수량</TableCell>\r\n              </TableRow>\r\n            </TableHead>\r\n            <TableBody>\r\n              {/* 클릭 이벤트 발생시 해당 메뉴 표에 추가하기 */}\r\n              {lists.map(({ key, name, price, qty }) => {\r\n                return (\r\n                  <TableRow key={key}>\r\n                    <TableCell>{name}</TableCell>\r\n                    <TableCell>{price}</TableCell>\r\n                    <TableCell>{qty}</TableCell>\r\n                  </TableRow>\r\n                );\r\n              })}\r\n            </TableBody>\r\n          </Table>\r\n        </div>\r\n      </div>\r\n    </Layout>\r\n  );\r\n};\r\n\r\nexport default TestPageForDB;\r\n"]},"metadata":{},"sourceType":"module"}