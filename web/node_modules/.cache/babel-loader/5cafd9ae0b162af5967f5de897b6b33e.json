{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.addHours = addHours;\nexports.addMinutes = addMinutes;\nexports.addSeconds = addSeconds;\nexports.formatTime = formatTime;\nexports.rad2deg = rad2deg;\nexports.getTouchEventOffsetValues = getTouchEventOffsetValues;\nexports.isInner = isInner;\n\nfunction addHours(d, hours) {\n  var newDate = clone(d);\n  newDate.setHours(d.getHours() + hours);\n  return newDate;\n}\n\nfunction addMinutes(d, minutes) {\n  var newDate = clone(d);\n  newDate.setMinutes(d.getMinutes() + minutes);\n  return newDate;\n}\n\nfunction addSeconds(d, seconds) {\n  var newDate = clone(d);\n  newDate.setSeconds(d.getMinutes() + seconds);\n  return newDate;\n}\n\nfunction clone(d) {\n  return new Date(d.getTime());\n}\n/**\r\n * @param date [Date] A Date object.\r\n * @param format [String] One of 'ampm', '24hr', defaults to 'ampm'.\r\n * @param pedantic [Boolean] Check time-picker/time-picker.jsx file.\r\n *\r\n * @return String A string representing the formatted time.\r\n */\n\n\nfunction formatTime(date) {\n  var format = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 'ampm';\n  var pedantic = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n  if (!date) return '';\n  var hours = date.getHours();\n  var mins = date.getMinutes().toString();\n\n  if (format === 'ampm') {\n    var isAM = hours < 12;\n    hours = hours % 12;\n    var additional = isAM ? ' am' : ' pm';\n    hours = (hours || 12).toString();\n    if (mins.length < 2) mins = '0' + mins;\n\n    if (pedantic) {\n      // Treat midday/midnight specially http://www.nist.gov/pml/div688/times.cfm\n      if (hours === '12' && mins === '00') {\n        return additional === ' pm' ? '12 noon' : '12 midnight';\n      }\n    }\n\n    return hours + (mins === '00' ? '' : ':' + mins) + additional;\n  }\n\n  hours = hours.toString();\n  if (hours.length < 2) hours = '0' + hours;\n  if (mins.length < 2) mins = '0' + mins;\n  return hours + ':' + mins;\n}\n\nfunction rad2deg(rad) {\n  return rad * 57.29577951308232;\n}\n\nfunction getTouchEventOffsetValues(event) {\n  var el = event.target;\n  var boundingRect = el.getBoundingClientRect();\n  return {\n    offsetX: event.clientX - boundingRect.left,\n    offsetY: event.clientY - boundingRect.top\n  };\n}\n\nfunction isInner(props) {\n  if (props.type !== 'hour') {\n    return false;\n  }\n\n  return props.value < 1 || props.value > 12;\n}","map":{"version":3,"sources":["C:/Users/multicampus/git/s02p12c103/web/node_modules/material-ui/TimePicker/timeUtils.js"],"names":["Object","defineProperty","exports","value","addHours","addMinutes","addSeconds","formatTime","rad2deg","getTouchEventOffsetValues","isInner","d","hours","newDate","clone","setHours","getHours","minutes","setMinutes","getMinutes","seconds","setSeconds","Date","getTime","date","format","arguments","length","undefined","pedantic","mins","toString","isAM","additional","rad","event","el","target","boundingRect","getBoundingClientRect","offsetX","clientX","left","offsetY","clientY","top","props","type"],"mappings":"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","sourcesContent":["'use strict';\r\n\r\nObject.defineProperty(exports, \"__esModule\", {\r\n  value: true\r\n});\r\nexports.addHours = addHours;\r\nexports.addMinutes = addMinutes;\r\nexports.addSeconds = addSeconds;\r\nexports.formatTime = formatTime;\r\nexports.rad2deg = rad2deg;\r\nexports.getTouchEventOffsetValues = getTouchEventOffsetValues;\r\nexports.isInner = isInner;\r\nfunction addHours(d, hours) {\r\n  var newDate = clone(d);\r\n  newDate.setHours(d.getHours() + hours);\r\n  return newDate;\r\n}\r\n\r\nfunction addMinutes(d, minutes) {\r\n  var newDate = clone(d);\r\n  newDate.setMinutes(d.getMinutes() + minutes);\r\n  return newDate;\r\n}\r\n\r\nfunction addSeconds(d, seconds) {\r\n  var newDate = clone(d);\r\n  newDate.setSeconds(d.getMinutes() + seconds);\r\n  return newDate;\r\n}\r\n\r\nfunction clone(d) {\r\n  return new Date(d.getTime());\r\n}\r\n\r\n/**\r\n * @param date [Date] A Date object.\r\n * @param format [String] One of 'ampm', '24hr', defaults to 'ampm'.\r\n * @param pedantic [Boolean] Check time-picker/time-picker.jsx file.\r\n *\r\n * @return String A string representing the formatted time.\r\n */\r\nfunction formatTime(date) {\r\n  var format = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 'ampm';\r\n  var pedantic = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\r\n\r\n  if (!date) return '';\r\n  var hours = date.getHours();\r\n  var mins = date.getMinutes().toString();\r\n\r\n  if (format === 'ampm') {\r\n    var isAM = hours < 12;\r\n    hours = hours % 12;\r\n    var additional = isAM ? ' am' : ' pm';\r\n    hours = (hours || 12).toString();\r\n\r\n    if (mins.length < 2) mins = '0' + mins;\r\n\r\n    if (pedantic) {\r\n      // Treat midday/midnight specially http://www.nist.gov/pml/div688/times.cfm\r\n      if (hours === '12' && mins === '00') {\r\n        return additional === ' pm' ? '12 noon' : '12 midnight';\r\n      }\r\n    }\r\n\r\n    return hours + (mins === '00' ? '' : ':' + mins) + additional;\r\n  }\r\n\r\n  hours = hours.toString();\r\n\r\n  if (hours.length < 2) hours = '0' + hours;\r\n  if (mins.length < 2) mins = '0' + mins;\r\n\r\n  return hours + ':' + mins;\r\n}\r\n\r\nfunction rad2deg(rad) {\r\n  return rad * 57.29577951308232;\r\n}\r\n\r\nfunction getTouchEventOffsetValues(event) {\r\n  var el = event.target;\r\n  var boundingRect = el.getBoundingClientRect();\r\n\r\n  return {\r\n    offsetX: event.clientX - boundingRect.left,\r\n    offsetY: event.clientY - boundingRect.top\r\n  };\r\n}\r\n\r\nfunction isInner(props) {\r\n  if (props.type !== 'hour') {\r\n    return false;\r\n  }\r\n  return props.value < 1 || props.value > 12;\r\n}"]},"metadata":{},"sourceType":"script"}