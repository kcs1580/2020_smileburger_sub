{"ast":null,"code":"import _slicedToArray from \"C:\\\\Users\\\\multicampus\\\\git\\\\s02p12c103\\\\web\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\multicampus\\\\git\\\\s02p12c103\\\\web\\\\src\\\\components\\\\BurgerModal.jsx\";\nimport React, { useState } from \"react\";\nimport { makeStyles, CardMedia, Dialog, Button, DialogActions, DialogContent, DialogContentText, DialogTitle, Typography, Card, CardContent, CardActions, CardHeader, IconButton, Grid, Paper } from \"@material-ui/core\";\nimport { CancelOutlined } from \"@material-ui/icons\";\nconst useStyles = makeStyles(theme => ({\n  cardMedia: {\n    paddingTop: \"56.25%\" // 16:9\n\n  },\n  dialogTitle1: {\n    backgroundColor: \"red\",\n    width: \"840px\",\n    color: \"white\",\n    padding: 0\n  },\n  dialogBody1: {\n    display: \"flex\",\n    width: \"840px\",\n    padding: 0\n  },\n  dialogTitle2: {\n    backgroundColor: \"red\",\n    width: \"900px\",\n    color: \"white\",\n    padding: 0\n  },\n  dialogBody2: {\n    display: \"flex\",\n    width: \"900px\",\n    padding: 0\n  },\n  details: {\n    display: \"flex\",\n    flexDirection: \"column\",\n    paddingRight: 20\n  },\n  img: {\n    marginLeft: 40,\n    marginRight: 40,\n    width: 350\n  },\n  btnGridHeight: {\n    height: 180\n  },\n  btnSingle: {\n    color: \"white\",\n    background: \"red\",\n    height: 100,\n    width: 200\n  },\n  btnSet: {\n    color: \"white\",\n    background: \"yellow\",\n    height: 100,\n    width: 200\n  },\n  btnPosition: {\n    textAlign: \"center\",\n    paddingTop: 50\n  }\n}));\n\nconst BurgerMoal = ({\n  burger\n}) => {\n  const classes = useStyles();\n\n  const _useState = useState(false),\n        _useState2 = _slicedToArray(_useState, 2),\n        open = _useState2[0],\n        setOpen = _useState2[1];\n\n  const _useState3 = useState(1),\n        _useState4 = _slicedToArray(_useState3, 2),\n        count = _useState4[0],\n        setCount = _useState4[1];\n\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  const onClickIncCnt = () => {\n    setCount(() => count + 1);\n  };\n\n  const onClickdecCnt = () => {\n    setCount(() => {\n      if (count > 2) {\n        return count - 1;\n      } else {\n        return 1;\n      }\n    });\n  };\n\n  const _useState5 = useState(false),\n        _useState6 = _slicedToArray(_useState5, 2),\n        openSingle = _useState6[0],\n        setOpenSingle = _useState6[1];\n\n  const handleClickOpenSingle = () => {\n    setOpen(false);\n    setOpenSingle(true);\n  };\n\n  const handleCloseSingle = () => {\n    setOpenSingle(false);\n  };\n\n  const _useState7 = useState(false),\n        _useState8 = _slicedToArray(_useState7, 2),\n        openSet = _useState8[0],\n        setOpenSet = _useState8[1];\n\n  const handleClickOpenSet = () => {\n    setOpen(false);\n    setOpenSet(true);\n  };\n\n  const handleCloseSet = () => {\n    setOpenSet(false);\n  };\n\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125\n    },\n    __self: this\n  }, React.createElement(CardMedia, {\n    className: classes.cardMedia,\n    image: burger.img,\n    title: burger.title,\n    onClick: handleClickOpen,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126\n    },\n    __self: this\n  }), React.createElement(Dialog, {\n    open: open,\n    onClose: handleClose,\n    \"aria-labelledby\": \"alert-dialog-title\",\n    \"aria-describedby\": \"alert-dialog-description\",\n    maxWidth: \"xl\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 137\n    },\n    __self: this\n  }, React.createElement(DialogTitle, {\n    id: \"alert-dialog-title\",\n    className: classes.dialogTitle1,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 144\n    },\n    __self: this\n  }, React.createElement(Typography, {\n    variant: \"h4\",\n    style: {\n      paddingLeft: 25\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 145\n    },\n    __self: this\n  }, burger.title, React.createElement(IconButton, {\n    style: {\n      color: \"white\",\n      paddingLeft: 625\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 147\n    },\n    __self: this\n  }, React.createElement(CancelOutlined, {\n    onClick: handleClose,\n    style: {\n      fontSize: 45\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 148\n    },\n    __self: this\n  })))), React.createElement(DialogContent, {\n    className: classes.dialogBody1,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 152\n    },\n    __self: this\n  }, React.createElement(\"img\", {\n    src: burger.img,\n    alt: burger.title,\n    className: classes.img,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 153\n    },\n    __self: this\n  }), React.createElement(Typography, {\n    component: \"h6\",\n    variant: \"h6\",\n    className: classes.details,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 154\n    },\n    __self: this\n  }, React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 155\n    },\n    __self: this\n  }, \"\\uC870\\uB9AC\\uC2DC\\uAC04: \", burger.cooking_time, \"\\uBD84\"), React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 156\n    },\n    __self: this\n  }, burger.description))), React.createElement(Grid, {\n    container: true,\n    className: classes.btnGridHeight,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 159\n    },\n    __self: this\n  }, React.createElement(Grid, {\n    item: true,\n    xs: 6,\n    className: classes.btnPosition,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 160\n    },\n    __self: this\n  }, React.createElement(Button, {\n    className: classes.btnSingle,\n    variant: \"contained\",\n    onClick: handleClickOpenSingle,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 161\n    },\n    __self: this\n  }, React.createElement(Typography, {\n    variant: \"h5\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 166\n    },\n    __self: this\n  }, \"\\uB2E8\\uD488: \", burger.price_single))), React.createElement(Grid, {\n    item: true,\n    xs: 6,\n    className: classes.btnPosition,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 169\n    },\n    __self: this\n  }, React.createElement(Button, {\n    className: classes.btnSet,\n    variant: \"contained\",\n    onClick: handleClickOpenSet,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 170\n    },\n    __self: this\n  }, React.createElement(Typography, {\n    variant: \"h5\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 175\n    },\n    __self: this\n  }, \"\\uC138\\uD2B8: \", burger.price_set))))), React.createElement(Dialog, {\n    open: openSingle,\n    onClose: handleCloseSingle,\n    \"aria-labelledby\": \"alert-dialog-title\",\n    \"aria-describedby\": \"alert-dialog-description\",\n    maxWidth: \"false\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 182\n    },\n    __self: this\n  }, React.createElement(DialogTitle, {\n    id: \"customized-dialog-title\",\n    onClose: handleClose,\n    className: classes.dialogTitle2,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 189\n    },\n    __self: this\n  }, React.createElement(Typography, {\n    variant: \"h4\",\n    style: {\n      paddingLeft: 25\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 194\n    },\n    __self: this\n  }, \"\\uB2E8\\uD488\\uC120\\uD0DD\", React.createElement(IconButton, {\n    style: {\n      color: \"white\",\n      paddingLeft: 675\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 196\n    },\n    __self: this\n  }, React.createElement(CancelOutlined, {\n    onClick: handleCloseSingle,\n    style: {\n      fontSize: 45\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 197\n    },\n    __self: this\n  })))), React.createElement(DialogContent, {\n    dividers: true,\n    className: classes.dialogBody2,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 204\n    },\n    __self: this\n  }, React.createElement(\"img\", {\n    src: burger.img,\n    alt: burger.title,\n    className: classes.img,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 205\n    },\n    __self: this\n  }), React.createElement(Typography, {\n    component: \"h6\",\n    variant: \"h6\",\n    className: classes.details,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 206\n    },\n    __self: this\n  }, React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 207\n    },\n    __self: this\n  }, \"\\uC870\\uB9AC\\uC2DC\\uAC04: \", burger.cooking_time, \"\\uBD84\"), React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 208\n    },\n    __self: this\n  }, burger.description), React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 209\n    },\n    __self: this\n  }))), React.createElement(Grid, {\n    container: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 212\n    },\n    __self: this\n  }, React.createElement(Grid, {\n    item: true,\n    xs: 6,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 213\n    },\n    __self: this\n  }, React.createElement(Paper, {\n    elevation: 0,\n    style: {\n      textAlign: \"center\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 214\n    },\n    __self: this\n  }, React.createElement(Button, {\n    onClick: onClickdecCnt,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 215\n    },\n    __self: this\n  }, \"-\"), count, React.createElement(Button, {\n    onClick: onClickIncCnt,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 217\n    },\n    __self: this\n  }, \"+\"))), React.createElement(Grid, {\n    item: true,\n    xs: 5,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 220\n    },\n    __self: this\n  }, React.createElement(Paper, {\n    elevation: 0,\n    style: {\n      textAlign: \"Right\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 221\n    },\n    __self: this\n  }, burger.price_single)), React.createElement(Grid, {\n    item: true,\n    xs: 1,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 225\n    },\n    __self: this\n  }))), React.createElement(Dialog, {\n    open: openSet,\n    onClose: handleCloseSet,\n    \"aria-labelledby\": \"alert-dialog-title\",\n    \"aria-describedby\": \"alert-dialog-description\",\n    maxWidth: \"xl\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 230\n    },\n    __self: this\n  }, React.createElement(Typography, {\n    variant: \"h1\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 237\n    },\n    __self: this\n  }, \"\\uC138\\uD2B8 \\uBAA8\\uB2EC\")));\n};\n\nexport default BurgerMoal;","map":{"version":3,"sources":["C:/Users/multicampus/git/s02p12c103/web/src/components/BurgerModal.jsx"],"names":["React","useState","makeStyles","CardMedia","Dialog","Button","DialogActions","DialogContent","DialogContentText","DialogTitle","Typography","Card","CardContent","CardActions","CardHeader","IconButton","Grid","Paper","CancelOutlined","useStyles","theme","cardMedia","paddingTop","dialogTitle1","backgroundColor","width","color","padding","dialogBody1","display","dialogTitle2","dialogBody2","details","flexDirection","paddingRight","img","marginLeft","marginRight","btnGridHeight","height","btnSingle","background","btnSet","btnPosition","textAlign","BurgerMoal","burger","classes","open","setOpen","count","setCount","handleClickOpen","handleClose","onClickIncCnt","onClickdecCnt","openSingle","setOpenSingle","handleClickOpenSingle","handleCloseSingle","openSet","setOpenSet","handleClickOpenSet","handleCloseSet","title","paddingLeft","fontSize","cooking_time","description","price_single","price_set"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\r\nimport {\r\n  makeStyles,\r\n  CardMedia,\r\n  Dialog,\r\n  Button,\r\n  DialogActions,\r\n  DialogContent,\r\n  DialogContentText,\r\n  DialogTitle,\r\n  Typography,\r\n  Card,\r\n  CardContent,\r\n  CardActions,\r\n  CardHeader,\r\n  IconButton,\r\n  Grid,\r\n  Paper\r\n} from \"@material-ui/core\";\r\nimport { CancelOutlined } from \"@material-ui/icons\";\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  cardMedia: {\r\n    paddingTop: \"56.25%\" // 16:9\r\n  },\r\n  dialogTitle1: {\r\n    backgroundColor: \"red\",\r\n    width: \"840px\",\r\n    color: \"white\",\r\n    padding: 0\r\n  },\r\n  dialogBody1: {\r\n    display: \"flex\",\r\n    width: \"840px\",\r\n    padding: 0\r\n  },\r\n  dialogTitle2: {\r\n    backgroundColor: \"red\",\r\n    width: \"900px\",\r\n    color: \"white\",\r\n    padding: 0\r\n  },\r\n  dialogBody2: {\r\n    display: \"flex\",\r\n    width: \"900px\",\r\n    padding: 0\r\n  },\r\n  details: {\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    paddingRight: 20\r\n  },\r\n  img: {\r\n    marginLeft: 40,\r\n    marginRight: 40,\r\n    width: 350\r\n  },\r\n  btnGridHeight: {\r\n    height: 180\r\n  },\r\n  btnSingle: {\r\n    color: \"white\",\r\n    background: \"red\",\r\n    height: 100,\r\n    width: 200\r\n  },\r\n  btnSet: {\r\n    color: \"white\",\r\n    background: \"yellow\",\r\n    height: 100,\r\n    width: 200\r\n  },\r\n  btnPosition: {\r\n    textAlign: \"center\",\r\n    paddingTop: 50\r\n  }\r\n}));\r\n\r\nconst BurgerMoal = ({ burger }) => {\r\n  const classes = useStyles();\r\n\r\n  const [open, setOpen] = useState(false);\r\n  const [count, setCount] = useState(1);\r\n\r\n  const handleClickOpen = () => {\r\n    setOpen(true);\r\n  };\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n  };\r\n\r\n  const onClickIncCnt = () => {\r\n    setCount(() => count + 1);\r\n  };\r\n\r\n  const onClickdecCnt = () => {\r\n    setCount(() => {\r\n      if (count > 2) {\r\n        return count - 1;\r\n      } else {\r\n        return 1;\r\n      }\r\n    });\r\n  };\r\n\r\n  const [openSingle, setOpenSingle] = useState(false);\r\n  const handleClickOpenSingle = () => {\r\n    setOpen(false);\r\n    setOpenSingle(true);\r\n  };\r\n  const handleCloseSingle = () => {\r\n    setOpenSingle(false);\r\n  };\r\n\r\n  const [openSet, setOpenSet] = useState(false);\r\n  const handleClickOpenSet = () => {\r\n    setOpen(false);\r\n    setOpenSet(true);\r\n  };\r\n  const handleCloseSet = () => {\r\n    setOpenSet(false);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <CardMedia\r\n        className={classes.cardMedia}\r\n        image={burger.img}\r\n        title={burger.title}\r\n        onClick={handleClickOpen}\r\n      />\r\n      {/* <Button variant=\"outlined\" color=\"primary\" onClick={handleClickOpen}>\r\n        {burger.title}\r\n      </Button> */}\r\n\r\n      {/* 메뉴선택 모달 */}\r\n      <Dialog\r\n        open={open}\r\n        onClose={handleClose}\r\n        aria-labelledby=\"alert-dialog-title\"\r\n        aria-describedby=\"alert-dialog-description\"\r\n        maxWidth=\"xl\"\r\n      >\r\n        <DialogTitle id=\"alert-dialog-title\" className={classes.dialogTitle1}>\r\n          <Typography variant=\"h4\" style={{ paddingLeft: 25 }}>\r\n            {burger.title}\r\n            <IconButton style={{ color: \"white\", paddingLeft: 625 }}>\r\n              <CancelOutlined onClick={handleClose} style={{ fontSize: 45 }} />\r\n            </IconButton>\r\n          </Typography>\r\n        </DialogTitle>\r\n        <DialogContent className={classes.dialogBody1}>\r\n          <img src={burger.img} alt={burger.title} className={classes.img} />\r\n          <Typography component=\"h6\" variant=\"h6\" className={classes.details}>\r\n            <p>조리시간: {burger.cooking_time}분</p>\r\n            <p>{burger.description}</p>\r\n          </Typography>\r\n        </DialogContent>\r\n        <Grid container className={classes.btnGridHeight}>\r\n          <Grid item xs={6} className={classes.btnPosition}>\r\n            <Button\r\n              className={classes.btnSingle}\r\n              variant=\"contained\"\r\n              onClick={handleClickOpenSingle}\r\n            >\r\n              <Typography variant=\"h5\">단품: {burger.price_single}</Typography>\r\n            </Button>\r\n          </Grid>\r\n          <Grid item xs={6} className={classes.btnPosition}>\r\n            <Button\r\n              className={classes.btnSet}\r\n              variant=\"contained\"\r\n              onClick={handleClickOpenSet}\r\n            >\r\n              <Typography variant=\"h5\">세트: {burger.price_set}</Typography>\r\n            </Button>\r\n          </Grid>\r\n        </Grid>\r\n      </Dialog>\r\n\r\n      {/* 단품선택 모달 */}\r\n      <Dialog\r\n        open={openSingle}\r\n        onClose={handleCloseSingle}\r\n        aria-labelledby=\"alert-dialog-title\"\r\n        aria-describedby=\"alert-dialog-description\"\r\n        maxWidth=\"false\"\r\n      >\r\n        <DialogTitle\r\n          id=\"customized-dialog-title\"\r\n          onClose={handleClose}\r\n          className={classes.dialogTitle2}\r\n        >\r\n          <Typography variant=\"h4\" style={{ paddingLeft: 25 }}>\r\n            단품선택\r\n            <IconButton style={{ color: \"white\", paddingLeft: 675 }}>\r\n              <CancelOutlined\r\n                onClick={handleCloseSingle}\r\n                style={{ fontSize: 45 }}\r\n              />\r\n            </IconButton>\r\n          </Typography>\r\n        </DialogTitle>\r\n        <DialogContent dividers className={classes.dialogBody2}>\r\n          <img src={burger.img} alt={burger.title} className={classes.img} />\r\n          <Typography component=\"h6\" variant=\"h6\" className={classes.details}>\r\n            <p>조리시간: {burger.cooking_time}분</p>\r\n            <p>{burger.description}</p>\r\n            <p></p>\r\n          </Typography>\r\n        </DialogContent>\r\n        <Grid container>\r\n          <Grid item xs={6}>\r\n            <Paper elevation={0} style={{ textAlign: \"center\" }}>\r\n              <Button onClick={onClickdecCnt}>-</Button>\r\n              {count}\r\n              <Button onClick={onClickIncCnt}>+</Button>\r\n            </Paper>\r\n          </Grid>\r\n          <Grid item xs={5}>\r\n            <Paper elevation={0} style={{ textAlign: \"Right\" }}>\r\n              {burger.price_single}\r\n            </Paper>\r\n          </Grid>\r\n          <Grid item xs={1} />\r\n        </Grid>\r\n      </Dialog>\r\n\r\n      {/* 세트선택 모달 */}\r\n      <Dialog\r\n        open={openSet}\r\n        onClose={handleCloseSet}\r\n        aria-labelledby=\"alert-dialog-title\"\r\n        aria-describedby=\"alert-dialog-description\"\r\n        maxWidth=\"xl\"\r\n      >\r\n        <Typography variant=\"h1\">세트 모달</Typography>\r\n      </Dialog>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default BurgerMoal;\r\n"]},"metadata":{},"sourceType":"module"}