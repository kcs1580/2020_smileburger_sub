{"ast":null,"code":"import _slicedToArray from \"C:\\\\project1\\\\s02p12c103\\\\web\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"C:\\\\project1\\\\s02p12c103\\\\web\\\\src\\\\pages\\\\sockettest.jsx\";\nimport React, { useState } from \"react\";\nimport socketio from \"socket.io-client\"; // let num = 1;\n\nconst socket = socketio.connect(\"http://localhost:3001\");\n\nconst Sockettest = () => {\n  const _useState = useState(0),\n        _useState2 = _slicedToArray(_useState, 2),\n        num = _useState2[0],\n        setNum = _useState2[1];\n\n  const _useState3 = useState(0)(() => {\n    socket.emit(\"joinRoom\", {\n      roomName: 'myroom'\n    });\n    socket.on(\"recMsg\", data => {\n      const num2 = data.comment;\n      console.log(num2);\n      setNum(num2);\n    });\n  })(),\n        _useState4 = _slicedToArray(_useState3, 2),\n        text = _useState4[0],\n        setText = _useState4[1];\n\n  const send = text => {\n    socket.emit(\"reqMsg\", {\n      comment: text\n    });\n  };\n\n  const handle = e => {\n    setText(e.target.value);\n  };\n\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29\n    },\n    __self: this\n  }, React.createElement(\"input\", {\n    type: \"text\",\n    onChange: handle,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30\n    },\n    __self: this\n  }), React.createElement(\"button\", {\n    onClick: () => {\n      send();\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31\n    },\n    __self: this\n  }, \" \\uBCF4\\uB0B4\\uAE30 \"), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32\n    },\n    __self: this\n  }, num), React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34\n    },\n    __self: this\n  }));\n};\n\nexport default Sockettest;","map":{"version":3,"sources":["C:/project1/s02p12c103/web/src/pages/sockettest.jsx"],"names":["React","useState","socketio","socket","connect","Sockettest","num","setNum","emit","roomName","on","data","num2","comment","console","log","text","setText","send","handle","e","target","value"],"mappings":";;AAAA,OAAOA,KAAP,IAAcC,QAAd,QAA6B,OAA7B;AACA,OAAOC,QAAP,MAAqB,kBAArB,C,CAGA;;AAEA,MAAMC,MAAM,GAAGD,QAAQ,CAACE,OAAT,CAAiB,uBAAjB,CAAf;;AACA,MAAMC,UAAU,GAAG,MAAM;AAAA,oBACCJ,QAAQ,CAAC,CAAD,CADT;AAAA;AAAA,QACdK,GADc;AAAA,QACTC,MADS;;AAAA,qBAEGN,QAAQ,CAAC,CAAD,CAAR,CAEzB,MAAM;AACLE,IAAAA,MAAM,CAACK,IAAP,CAAY,UAAZ,EAAuB;AAACC,MAAAA,QAAQ,EAAC;AAAV,KAAvB;AACAN,IAAAA,MAAM,CAACO,EAAP,CAAU,QAAV,EAAoBC,IAAI,IAAI;AAC1B,YAAMC,IAAI,GAAGD,IAAI,CAACE,OAAlB;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAYH,IAAZ;AACAL,MAAAA,MAAM,CAACK,IAAD,CAAN;AACD,KAJD;AAMD,GAVyB,GAFH;AAAA;AAAA,QAEdI,IAFc;AAAA,QAERC,OAFQ;;AAcvB,QAAMC,IAAI,GAAGF,IAAD,IAAU;AACpBb,IAAAA,MAAM,CAACK,IAAP,CAAY,QAAZ,EAAsB;AAACK,MAAAA,OAAO,EAAEG;AAAV,KAAtB;AACD,GAFD;;AAGA,QAAMG,MAAM,GAAIC,CAAD,IAAO;AACpBH,IAAAA,OAAO,CAACG,CAAC,CAACC,MAAF,CAASC,KAAV,CAAP;AACD,GAFD;;AAGA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAO,IAAA,IAAI,EAAC,MAAZ;AAAmB,IAAA,QAAQ,EAAEH,MAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,EAEI;AAAQ,IAAA,OAAO,EAAE,MAAM;AAACD,MAAAA,IAAI;AAAG,KAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4BAFJ,EAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAMZ,GAAN,CAHF,EAKE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IALF,CADF;AASD,CA7BD;;AA+BA,eAAeD,UAAf","sourcesContent":["import React,{useState} from \"react\";\r\nimport socketio from \"socket.io-client\";\r\n\r\n\r\n// let num = 1;\r\n\r\nconst socket = socketio.connect(\"http://localhost:3001\");\r\nconst Sockettest = () => {\r\n    const [num, setNum] = useState(0);\r\n    const [text, setText] = useState(0)\r\n \r\n  (() => {\r\n    socket.emit(\"joinRoom\",{roomName:'myroom'});\r\n    socket.on(\"recMsg\", data => {\r\n      const num2 = data.comment;\r\n      console.log(num2);\r\n      setNum(num2)\r\n    });\r\n    \r\n  })();\r\n\r\n  const send =(text) => {\r\n    socket.emit(\"reqMsg\", {comment: text});\r\n  }\r\n  const handle = (e) => {\r\n    setText(e.target.value)\r\n  }\r\n  return (\r\n    <div>\r\n        <input type=\"text\" onChange={handle}/>\r\n        <button onClick={() => {send()}}> 보내기 </button>\r\n      <div>{num}</div>\r\n\r\n      <br />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Sockettest;"]},"metadata":{},"sourceType":"module"}