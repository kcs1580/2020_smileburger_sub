{"ast":null,"code":"import _objectSpread from \"C:\\\\Users\\\\multicampus\\\\Documents\\\\REACT\\\\Project1\\\\s02p12c103\\\\web\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread2\";\nimport _slicedToArray from \"C:\\\\Users\\\\multicampus\\\\Documents\\\\REACT\\\\Project1\\\\s02p12c103\\\\web\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\multicampus\\\\Documents\\\\REACT\\\\Project1\\\\s02p12c103\\\\web\\\\src\\\\pages\\\\admin\\\\Admin_order_list.jsx\";\nimport React, { useState } from 'react';\nimport BoardForm from './App_BoardForm';\nimport BoardItem from './App_BoardItem';\nimport Admin_menu from './Admin_menu';\nimport CheeseburgerMenu from 'cheeseburger-menu';\nimport HamburgerMenu from 'react-hamburger-menu';\n\nfunction App() {\n  const _useState = useState({\n    maxNo: 2,\n    boards: [{\n      brdno: 1,\n      brdwriter: '5',\n      brdtitle: '솔라시',\n      brddate: new Date()\n    }],\n    selectedBoard: {}\n  }),\n        _useState2 = _slicedToArray(_useState, 2),\n        state = _useState2[0],\n        setState = _useState2[1];\n\n  const handleSaveData = data => {\n    if (!data.brdno) {\n      // new : Insert\n      setState({\n        maxNo: state.maxNo + 1,\n        boards: state.boards.concat(_objectSpread({\n          brdno: state.maxNo,\n          brddate: new Date()\n        }, data)),\n        selectedBoard: {}\n      });\n    } else if (data.brdno) {\n      // Update\n      setState({\n        maxNo: state.maxNo,\n        boards: state.boards.map(row => data.brdno === row.brdno ? _objectSpread({}, data) : row),\n        selectedBoard: {}\n      });\n    }\n  };\n\n  const handleRemove = brdno => {\n    setState({\n      maxNo: state.maxNo,\n      boards: state.boards.filter(row => row.brdno !== brdno),\n      selectedBoard: {}\n    });\n  };\n\n  const handleSelectRow = row => {\n    setState({\n      maxNo: state.maxNo,\n      boards: state.boards,\n      selectedBoard: row\n    });\n  };\n\n  return React.createElement(\"div\", {\n    className: \"App-BoardForm\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57\n    },\n    __self: this\n  }, React.createElement(CheeseburgerMenu, {\n    isOpen: menuOpen,\n    closeCallback: closeMenu,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58\n    },\n    __self: this\n  }, React.createElement(Admin_menu, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61\n    },\n    __self: this\n  })), React.createElement(HamburgerMenu, {\n    isOpen: menuOpen,\n    menuClicked: openMenu,\n    width: 50,\n    height: 50,\n    strokeWidth: 10,\n    rotate: 0,\n    color: \"blue\",\n    borderRadius: 0,\n    animationDuration: 0.5,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64\n    },\n    __self: this\n  }), React.createElement(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75\n    },\n    __self: this\n  }, \"\\uAD00\\uB9AC\\uC790 \\uD398\\uC774\\uC9C0 - \\uC8FC\\uBB38 \\uBAA9\\uB85D \\uD398\\uC774\\uC9C0 \\uC785\\uB2C8\\uB2E4.\"), React.createElement(BoardForm, {\n    selectedBoard: state.selectedBoard,\n    onSaveData: handleSaveData,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76\n    },\n    __self: this\n  }), React.createElement(\"table\", {\n    classname: \"App-table\",\n    border: \"2\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77\n    },\n    __self: this\n  }, React.createElement(\"tbody\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78\n    },\n    __self: this\n  }, React.createElement(\"tr\", {\n    align: \"center\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79\n    },\n    __self: this\n  }, React.createElement(\"td\", {\n    width: \"50\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80\n    },\n    __self: this\n  }, \"\\uBC88\\uD638\"), React.createElement(\"td\", {\n    width: \"100\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81\n    },\n    __self: this\n  }, \"\\uC8FC\\uBB38\\uC790\"), React.createElement(\"td\", {\n    width: \"100\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82\n    },\n    __self: this\n  }, \"\\uC8FC\\uBB38\\uC218\"), React.createElement(\"td\", {\n    width: \"200\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83\n    },\n    __self: this\n  }, \"\\uB0A0\\uC9DC\")), state.boards.map(row => React.createElement(BoardItem, {\n    key: row.brdno,\n    row: row,\n    onRemove: handleRemove,\n    onSelectRow: handleSelectRow,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87\n    },\n    __self: this\n  })))));\n}\n\n;\nexport default App;","map":{"version":3,"sources":["C:/Users/multicampus/Documents/REACT/Project1/s02p12c103/web/src/pages/admin/Admin_order_list.jsx"],"names":["React","useState","BoardForm","BoardItem","Admin_menu","CheeseburgerMenu","HamburgerMenu","App","maxNo","boards","brdno","brdwriter","brdtitle","brddate","Date","selectedBoard","state","setState","handleSaveData","data","concat","map","row","handleRemove","filter","handleSelectRow","menuOpen","closeMenu","openMenu"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\r\nimport BoardForm from './App_BoardForm';\r\nimport BoardItem from './App_BoardItem';\r\nimport Admin_menu from './Admin_menu'\r\nimport CheeseburgerMenu from 'cheeseburger-menu'\r\nimport HamburgerMenu from 'react-hamburger-menu'\r\n\r\nfunction App() {\r\n\r\n    const [state, setState] = useState({\r\n        maxNo: 2,\r\n        boards: [\r\n            {\r\n                brdno: 1,\r\n                brdwriter: '5',\r\n                brdtitle: '솔라시',\r\n                brddate: new Date()\r\n            },\r\n        ],\r\n        selectedBoard: {}\r\n    });\r\n\r\n    const handleSaveData = (data) => {\r\n        if (!data.brdno) {\r\n            // new : Insert\r\n            setState({\r\n                maxNo: state.maxNo + 1,\r\n                boards: state.boards.concat({ brdno: state.maxNo, brddate: new Date(), ...data }),\r\n                selectedBoard: {}\r\n            });\r\n        } else if (data.brdno) {                                                        // Update\r\n            setState({\r\n                maxNo: state.maxNo,\r\n                boards: state.boards.map(row => data.brdno === row.brdno ? { ...data } : row),\r\n                selectedBoard: {}\r\n            })\r\n        }\r\n    };\r\n\r\n    const handleRemove = (brdno) => {\r\n        setState({\r\n            maxNo: state.maxNo,\r\n            boards: state.boards.filter(row => row.brdno !== brdno),\r\n            selectedBoard: {}\r\n        })\r\n    };\r\n\r\n    const handleSelectRow = (row) => {\r\n        setState({\r\n            maxNo: state.maxNo,\r\n            boards: state.boards,\r\n            selectedBoard: row\r\n        });\r\n    };\r\n\r\n    return (\r\n        <div className=\"App-BoardForm\">\r\n            <CheeseburgerMenu\r\n                isOpen={menuOpen}\r\n                closeCallback={closeMenu}>\r\n                <Admin_menu />\r\n            </CheeseburgerMenu>\r\n\r\n            <HamburgerMenu\r\n                isOpen={menuOpen}\r\n                menuClicked={openMenu}\r\n                width={50}\r\n                height={50}\r\n                strokeWidth={10}\r\n                rotate={0}\r\n                color='blue'\r\n                borderRadius={0}\r\n                animationDuration={0.5}\r\n            />\r\n            <h1>관리자 페이지 - 주문 목록 페이지 입니다.</h1>\r\n            <BoardForm selectedBoard={state.selectedBoard} onSaveData={handleSaveData} />\r\n            <table classname=\"App-table\" border=\"2\">\r\n                <tbody>\r\n                    <tr align=\"center\">\r\n                        <td width=\"50\">번호</td>\r\n                        <td width=\"100\">주문자</td>\r\n                        <td width=\"100\">주문수</td>\r\n                        <td width=\"200\">날짜</td>\r\n                    </tr>\r\n                    {\r\n                        state.boards.map(row =>\r\n                            (<BoardItem key={row.brdno} row={row} onRemove={handleRemove} onSelectRow={handleSelectRow} />)\r\n                        )\r\n                    }\r\n                </tbody>\r\n            </table>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default App;"]},"metadata":{},"sourceType":"module"}